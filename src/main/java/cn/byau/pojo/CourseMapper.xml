<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.byau.dao.CourseMapper">
	<resultMap id="BaseResultMap" type="Course">
		<id column="course_id" property="courseId" jdbcType="VARCHAR" />
		<result column="course_name" property="courseName" jdbcType="VARCHAR" />
		<result column="coursekind_id" property="courseKindId" jdbcType="VARCHAR" />
		<result column="course_score" property="courseScore" jdbcType="VARCHAR" />
		<result column="course_hour" property="courseHour" jdbcType="VARCHAR" />
		<result column="course_remark" property="courseRemark" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="hResultMap" type="Course">
		<id column="course_id" property="courseId" jdbcType="VARCHAR" />
		<result column="course_name" property="courseName" jdbcType="VARCHAR" />
		<result column="coursekind_id" property="courseKindId" jdbcType="VARCHAR" />
		<result column="course_score" property="courseScore" jdbcType="VARCHAR" />
		<result column="course_hour" property="courseHour" jdbcType="VARCHAR" />
		<result column="course_remark" property="courseRemark" jdbcType="VARCHAR" />
		<association property="courseKind" javaType="CourseKind">
			<id column="kind_id" property="kindId" jdbcType="VARCHAR" />
		<result column="kind_name" property="kindName" jdbcType="VARCHAR" />
		<result column="kind_remark" property="kindRemark" jdbcType="VARCHAR" />
		</association>



	</resultMap>

	<sql id="Base_Column_List">
		course_id, course_name, coursekind_id, course_score, course_hour, course_remark
	</sql>
	<select id="getById" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from course
		where course_id = #{courseId,jdbcType=VARCHAR}
	</select>

	<select id="list" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from course
	</select>
	

	<select id="listByPage" resultMap="hResultMap">
		select c.*,ck.kind_name

		from coursekind ck,course c
		where ck.kind_id=c.coursekind_id and course_id like
		concat('%',#{value},'%')
	</select>

<!-- 	<delete id="delete"> -->
<!-- 		delete from course -->
<!-- 		where course_id = #{courseId,jdbcType=VARCHAR} -->
<!-- 	</delete> -->
	
	<insert id="save" parameterType="Course">
		insert into course
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="courseId != null">
				course_id,
			</if>
			<if test="courseName != null">
				course_name,
			</if>
			<if test="courseKindId != null">
				coursekind_id,
			</if>
			<if test="courseScore != null">
				course_score,
			</if>
			<if test="courseHour != null">
				course_hour,
			</if>
			<if test="courseRemark != null">
				course_remark,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="courseId != null">
				#{courseId,jdbcType=VARCHAR},
			</if>

			<if test="courseName != null">
				#{courseName,jdbcType=VARCHAR},
			</if>
			<if test="courseKindId != null">
				#{courseKindId,jdbcType=VARCHAR},
			</if>
			<if test="courseScore != null">
				#{courseScore,jdbcType=VARCHAR},
			</if>
			<if test="courseHour != null">
				#{courseHour,jdbcType=VARCHAR},
			</if>
			<if test="courseRemark != null">
				#{courseRemark,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="Course">
		update course
		<set>

			<if test="courseName != null">
				course_name = #{courseName,jdbcType=VARCHAR},
			</if>
			<if test="courseKindId != null">
				coursekind_id = #{courseKindId,jdbcType=VARCHAR},
			</if>
			<if test="courseScore != null">
				course_score = #{courseScore,jdbcType=VARCHAR},
			</if>
			<if test="courseHour != null">
				course_hour = #{courseHour,jdbcType=VARCHAR},
			</if>
			<if test="courseRemark != null">
				course_remark = #{courseRemark,jdbcType=VARCHAR},
			</if>
		</set>
		where course_id =#{courseId,jdbcType=VARCHAR}
	</update>
	

	<insert id="insertBatch" parameterType="java.util.List">
		insert into course (course_id, course_name,
		coursekind_id, course_score, course_hour,
		course_remark) values
		<foreach collection="list"  item="course"
			separator=",">
			(#{course.courseId,jdbcType=VARCHAR}, #{course.courseName,jdbcType=VARCHAR},
			#{course.courseKindId,jdbcType=VARCHAR},
			#{course.courseScore,jdbcType=VARCHAR},
			#{course.courseHour,jdbcType=VARCHAR},
			#{course.courseRemark,jdbcType=VARCHAR})
		</foreach>
	</insert>
	<delete id="deleteBatch" parameterType="String">
        delete from course where course_id in
        <foreach item="courseId" collection="array" open="(" separator="," close=")">
            #{courseId} 
        </foreach>
    </delete>
	
</mapper>